# -*- coding: utf-8 -*-
"""Telefonate.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1bX9DTj7CsukFRKSQIbBfr8-zVFr4CCKU
"""

import csv

def minuti_dall_inizio_mese(giorno, ora, minuto):
    return (giorno - 1) * 24 * 60 + ora * 60 + minuto

def ottieniDatiTelefonate(nomeFile):
    dati = []
    with open(nomeFile, newline='') as f:
        reader = csv.reader(f, delimiter=';')
        next(reader, None)  # salta intestazione
        for colonne in reader:
            if not colonne or colonne[0].startswith('#'):
                continue
            try:
                c1 = int(colonne[0].strip())
                c2 = int(colonne[1].strip())
                cell1 = int(colonne[2].strip())
                cell2 = int(colonne[3].strip())

                # inizio chiamata
                ggi, hhi, mmi = map(int, colonne[4].strip().split(':'))
                # fine chiamata
                ggf, hhf, mmf = map(int, colonne[5].strip().split(':'))

                if c1 == c2:
                    continue
                if not (1 <= ggi <= 31 and 0 <= hhi <= 23 and 0 <= mmi <= 59):
                    continue
                if not (1 <= ggf <= 31 and 0 <= hhf <= 23 and 0 <= mmf <= 59):
                    continue

                inizio = minuti_dall_inizio_mese(ggi, hhi, mmi)
                fine = minuti_dall_inizio_mese(ggf, hhf, mmf)

                durata = fine - inizio + 1
                if inizio > fine or durata > 600:  # max 10 ore
                    continue

                dati.append((c1, c2, cell1, cell2, durata))
            except:
                continue
    return dati


def calcolaBollette(datiChiamate):
    bollette = {}
    for c1, _, _, _, minuti in datiChiamate:
        bollette[c1] = bollette.get(c1, 0) + minuti
    for c in bollette:
        bollette[c] = round(max(0, bollette[c] - 20) * 0.10, 2)
    return bollette


def calcolaCelleCongestionate(datiChiamate):
    celle = {}
    for _, _, cella, _, _ in datiChiamate:
        celle[cella] = celle.get(cella, 0) + 1
    media = sum(celle.values()) / len(celle) if celle else 0
    return [c for c, count in celle.items() if count > media]


# ----------------------------
# Caricamento file su Colab
# ----------------------------
from google.colab import files

print("Seleziona il file telefonate.csv dal tuo computer")
uploaded = files.upload()  # selezioni il CSV dal tuo PC

nome_file = list(uploaded.keys())[0]  # prende il primo file caricato

# ----------------------------
# Esecuzione script
# ----------------------------

dati = ottieniDatiTelefonate(nome_file)
print("Dati validi:", dati)

bollette = calcolaBollette(dati)
print("Bollette clienti:", bollette)

celle_congestionate = calcolaCelleCongestionate(dati)
print("Celle congestionate:", celle_congestionate)
